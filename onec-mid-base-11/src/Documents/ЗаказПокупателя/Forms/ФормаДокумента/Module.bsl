
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// {{Доработка Юферева С 22.10.2023: Добавление команды "Пересчитать табличную часть"
	Команда = Команды.Добавить("ПересчитатьТабличнуюЧасть");
	Команда.Заголовок = "Пересчитать табличную часть";
	Команда.Действие = "КомандаПересчетТабличнойЧасти";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчетТабличнойЧасти",Тип("КнопкаФормы"),Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТабличнуюЧасть";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	// Доработка}}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//@skip-check module-unused-method
&НаКлиенте
Асинх Процедура Д_СогласованнаяСкидкаПриИзменении(Элемент)  
	
	// {{Доработка Юферева С 22.10.2023: Добавление поля ввода "Согласованная скидка"
	
	Если Объект.Товары.Количество() <> 0 ИЛИ Объект.Услуги.Количество() <> 0 Тогда
		
		Ответ = Ждать ВопросАсинх("Изменился процент скидки, пересчитать цены?",РежимДиалогаВопрос.ДаНет); 
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			РасчитатьТабличнуюЧасть(); 
			
		Иначе
			
			Возврат;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	// Доработка}}

КонецПроцедуры

&НаКлиенте
Процедура РасчитатьТабличнуюЧасть()  
	
	// {{Доработка Юферева С 22.10.2023: Добавление поля ввода "Согласованная скидка", пересчет табличной части со скидкой
	
	Скидка = Объект.Д_СогласованнаяСкидка;  
	
	Для Каждого ТекущиеДанные из Объект.Товары Цикл  
		СуммаСкидок = Скидка + ТекущиеДанные.Скидка;
		Если СуммаСкидок > 100 Тогда
			ТекущиеДанные.Сумма = 0;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
            НСтр("ru = 'Скидка превышает 100%'"), ,
            "Объект.ПолеВРеквизитеФормыОбъект");
		
		Иначе	
			КоэффициентСкидки = 1 - СуммаСкидок / 100;
			ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки ;
		КонецЕсли;   
		
	КонецЦикла; 
	Для Каждого ТекущиеДанные из Объект.Услуги Цикл  
		СуммаСкидок = Скидка + ТекущиеДанные.Скидка;
		Если СуммаСкидок > 100 Тогда
			ТекущиеДанные.Сумма = 0;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
            НСтр("ru = 'Скидка превышает 100%'"), ,
            "Объект.ПолеВРеквизитеФормыОбъект");
		Иначе	
			КоэффициентСкидки = 1 - СуммаСкидок / 100;
			ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки ;
		КонецЕсли;   
	КонецЦикла; 
	
	РассчитатьСуммуДокумента();  
	// Доработка}}
	
     	
КонецПроцедуры	

//@skip-check module-unused-method
&НаКлиенте
Процедура КомандаПересчетТабличнойЧасти(Команда)  
	
	// {{Доработка Юферева С 22.10.2023: Добавление поля ввода "Согласованная скидка", пересчет табличной части со скидкой
    РасчитатьТабличнуюЧасть(); 
    // Доработка}}
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// {{Доработка: рассчитать сумму строки с учетом двух скидок
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	Скидка = Объект.Д_СогласованнаяСкидка;  
	СуммаСкидок = Скидка + ТекущиеДанные.Скидка; 
	Если СуммаСкидок > 100 Тогда
		ТекущиеДанные.Сумма = 0;
	ОбщегоНазначенияКлиент.СообщитьПользователю(
    НСтр("ru = 'Скидка превышает 100%'"), ,
    "Объект.ПолеВРеквизитеФормыОбъект");
	Иначе	
		КоэффициентСкидки = 1 - СуммаСкидок / 100;
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки ;
	КонецЕсли;   
	// Доработка}}
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
